name: Build and Push Multi-arch Docker Image

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  REGISTRY_IMAGE: becchi78/iac_devcontainer

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=infrastructure_devcontainer
            org.opencontainers.image.vendor=becchi78
            org.opencontainers.image.licenses=Apache-2.0

      - name: Determine build args based on platform
        id: buildargs
        run: |
          if [[ "${{ matrix.platform }}" == "linux/amd64" ]]; then
            echo "BUILDARCH=amd64" >> $GITHUB_OUTPUT
            echo "AWSCLIARCH=x86_64" >> $GITHUB_OUTPUT
            echo "SAMCLIARCH=x86_64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.platform }}" == "linux/arm64" ]]; then
            echo "BUILDARCH=arm64" >> $GITHUB_OUTPUT
            echo "AWSCLIARCH=aarch64" >> $GITHUB_OUTPUT
            echo "SAMCLIARCH=arm64" >> $GITHUB_OUTPUT
          fi

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDARCH=${{ steps.buildargs.outputs.BUILDARCH }}
            AWSCLIARCH=${{ steps.buildargs.outputs.AWSCLIARCH }}
            SAMCLIARCH=${{ steps.buildargs.outputs.SAMCLIARCH }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge and push manifest
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=tag

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
